1. Selezionare tutti gli studenti nati nel 1990 (160)


SELECT
    *
FROM
    `students`
WHERE
    YEAR(`date_of_birth`) = 1990;



2. Selezionare tutti i corsi che valgono più di 10 crediti (479)


SELECT
    *
FROM
    `courses`
WHERE
    `cfu` > 10;



3. Selezionare tutti gli studenti che hanno più di 30 anni


SELECT
    * 
FROM 
    `students` 
WHERE 
    TIMESTAMPDIFF(YEAR,`date_of_birth`,CURDATE())>30



4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di
laurea (286)


SELECT
    *
FROM
    `courses`
WHERE
    `period`= 'I semestre'
AND     
    `year` = 1



5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del
20/06/2020 (21)


SELECT
    *
FROM
    `exams`
WHERE
    `date` = '2020-06-20'
AND 
    `hour` > '14:00'



6. Selezionare tutti i corsi di laurea magistrale (38)


SELECT
    *
FROM
    `degrees`
WHERE
    `level` = 'magistrale'



7. Da quanti dipartimenti è composta l'università? (12)


SELECT
    COUNT(*)
FROM
    `departments`



8. Quanti sono gli insegnanti che non hanno un numero di telefono? (50)


SELECT
    COUNT(*)
FROM
    `teachers`
WHERE
    `phone` IS NULL



QUERIES CON GROUP BY




1. Contare quanti iscritti ci sono stati ogni anno


SELECT
    COUNT(*), YEAR(`enrolment_date`)
FROM
    `students`
GROUP BY YEAR(`enrolment_date`)



2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio


SELECT
    COUNT(*) , `office_address`
FROM
    `teachers`
GROUP BY `office_address`
ORDER BY  COUNT(*)



3. Calcolare la media dei voti di ogni appello d'esame


SELECT
    AVG(`vote`) ,`exam_id`
FROM
    `exam_student`
GROUP BY `exam_id`




4. Contare quanti corsi di laurea ci sono per ogni dipartimento


SELECT
    COUNT(`name`) , `department_id`
FROM
    `degrees`
GROUP BY `department_id`


JOIN QUERIES


1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia


SELECT
    `students`.*
FROM
    `students`
JOIN 
    `degrees` ON `degrees`.`id` = `students`.`degree_id`
WHERE
    `degrees`.`name`=  'Corso di Laurea in Economia'



2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze


SELECT
    `degrees`.*
FROM
    `departments`
JOIN `degrees`ON `departments`.`id`= `degrees`.`department_id`
WHERE `departments`.`name` = 'Dipartimento di Neuroscienze'
AND `degrees`.`level`= 'magistrale'


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)


SELECT
    `courses`.*
FROM
    `courses`
JOIN `course_teacher`ON `courses`.`id`= `course_teacher`.`course_id`
JOIN `teachers`ON `course_teacher`.`course_id`= `teachers`.`id`
WHERE `teachers`.`id`= 44



4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome


SELECT
    `students`.*,
    `courses`.*,
    `departments`.*
FROM
    `students`
JOIN `exam_student` ON `students`.`id` = `exam_student`.`student_id`
JOIN `exams`
ON
    `exams`.`id` = `exam_student`.`exam_id`
JOIN `courses`
ON
    `courses`.`id` = `exams`.`course_id`
JOIN `degrees` ON `degrees`.`id` = `courses`.`degree_id`
JOIN `departments`
ON
    `departments`.`id` = `degrees`.`department_id`

ORDER BY
    `students`.`surname` AND `students`.`name` ASC; 

   

(NON MI HA PERMESSO DI ORDINARLI ALFABETICAMENTE PER COGNOME E NOME , SE AD ESEMPIO INSERISSI SOLO
 IL COGNOME FUNZIONEREBBE MA CON ENTRAMBI E' COME SE NON INSERISSI PROPRIO L' ORDER BY)




5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti


SELECT
    `degrees`.*,
    `courses`.*,
    `teachers`.*
FROM
    `degrees`
JOIN `courses` ON `degrees`.`id`= `courses`.`degree_id`
JOIN `course_teacher`ON `courses`.id = `course_teacher`.`course_id`
JOIN `teachers` ON `teachers`.`id`= `course_teacher`.`teacher_id`



6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)



SELECT
    `teachers`.*
FROM
    `departments`
JOIN `degrees`ON `departments`.`id`= `degrees`.`department_id`
JOIN `courses` ON `degrees`.`id`= `courses`.`degree_id`
JOIN `course_teacher`ON `courses`.id = `course_teacher`.`course_id`
JOIN `teachers` ON `teachers`.`id`= `course_teacher`.`teacher_id`
WHERE `departments`.`name` = 'Dipartimento di Matematica'



7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.


(PURTROPPO NON SONO RIUSCITO A UTILIZZARE CORRETTAMENTE IL COUNT E IL MAX PER ESEGUIRE LE PRIME DUE RICHIESTE DELLA CONSEGNA
 DOPO L' INSERIMENTO DI SELECT `students`.* NON MI HA FATTO INSERIRE LE KEYWORD SOPRA CITATE E MI SEGNALAVA ERRORI)



SELECT
    `students`.*
FROM
    `students`
JOIN `exam_student`
ON
    `students`.`id` = `exam_student`.`student_id`
JOIN `exams` ON `exams`.`id` = `exam_student`.`exam_id`
WHERE
    `exam_student`.`vote` >= 18









